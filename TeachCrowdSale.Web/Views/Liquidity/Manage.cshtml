@model TeachCrowdSale.Core.Models.Liquidity.UserLiquidityPositionModel?
@{
    Layout = null;
}
@{
    ViewData["Title"] = "Manage Liquidity Positions - TEACH Token";
    ViewData["Description"] = "View and manage your TEACH token liquidity positions, track performance, and claim rewards.";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <meta name="description" content="@ViewData["Description"]" />

    <!-- Open Graph / Social Media -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Manage Liquidity Positions - TEACH Token" />
    <meta property="og:description" content="@ViewData["Description"]" />
    <meta property="og:image" content="/images/teachtoken-manage-liquidity-og.jpg" />
    <meta property="og:url" content="https://teachtoken.io/liquidity/manage" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Manage Liquidity Positions - TEACH Token" />
    <meta name="twitter:description" content="@ViewData["Description"]" />

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">

    <!-- Syncfusion CSS -->
    <link href="https://cdn.syncfusion.com/ej2/material3-dark.css" rel="stylesheet" />

    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/liquidity.css" asp-append-version="true" />

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
</head>

<body>
    <!-- Navigation -->
    @await Html.PartialAsync("_NavigationPartial")

    <!-- Main Content Wrapper -->
    <div class="main-content">

        <!-- Manage Hero Section -->
        <section class="liquidity-hero-section">
            <div class="container">
                <div class="liquidity-hero-container">
                    <div class="liquidity-hero-content">
                        <h1>Manage Liquidity Positions</h1>
                        <p class="liquidity-hero-subtitle">
                            Track your liquidity positions, monitor performance, and manage your rewards across all pools.
                        </p>
                        <div class="liquidity-hero-actions">
                            <a href="/liquidity/add" class="btn-primary hero-cta">
                                Add New Position
                            </a>
                            <button class="btn-secondary hero-cta" onclick="refreshPositions()">
                                Refresh Data
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        @if (string.IsNullOrEmpty(ViewBag.WalletAddress))
        {
            <!-- Wallet Connection Section -->
            <section class="wallet-connection-section">
                <div class="container">
                    <div class="wallet-connect">
                        <h3>Connect Your Wallet</h3>
                        <p>Connect your wallet to view and manage your liquidity positions.</p>

                        <div class="wallet-options">
                            <button class="wallet-option" data-wallet="metamask">
                                <img src="/images/wallets/metamask.png" alt="MetaMask" class="wallet-icon">
                                <span>MetaMask</span>
                            </button>
                            <button class="wallet-option" data-wallet="walletconnect">
                                <img src="/images/wallets/walletconnect.png" alt="WalletConnect" class="wallet-icon">
                                <span>WalletConnect</span>
                            </button>
                            <button class="wallet-option" data-wallet="coinbase">
                                <img src="/images/wallets/coinbase.png" alt="Coinbase Wallet" class="wallet-icon">
                                <span>Coinbase Wallet</span>
                            </button>
                            <button class="wallet-option" data-wallet="trust">
                                <img src="/images/wallets/trust.png" alt="Trust Wallet" class="wallet-icon">
                                <span>Trust Wallet</span>
                            </button>
                        </div>

                        <div class="wallet-manual-input">
                            <h4>Or Enter Wallet Address Manually</h4>
                            <div class="manual-input-group">
                                <input type="text" id="manual-wallet-address" placeholder="0x..." maxlength="42">
                                <button class="btn-primary" onclick="loadManualWallet()">Load Positions</button>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        }
        else
        {
            <!-- Portfolio Overview Section -->
            <section class="portfolio-overview-section">
                <div class="container">
                    <div class="section-header">
                        <h2>Portfolio Overview</h2>
                        <p>Connected Wallet: <span class="wallet-address">@ViewBag.WalletAddress</span></p>
                    </div>

                    <!-- Portfolio stats will be calculated by JavaScript from positions data -->
                    <div class="positions-overview" id="portfolio-overview">
                        <div class="position-card loading-card">
                            <div class="loading-shimmer"></div>
                        </div>
                        <div class="position-card loading-card">
                            <div class="loading-shimmer"></div>
                        </div>
                        <div class="position-card loading-card">
                            <div class="loading-shimmer"></div>
                        </div>
                        <div class="position-card loading-card">
                            <div class="loading-shimmer"></div>
                        </div>
                        <div class="position-card loading-card">
                            <div class="loading-shimmer"></div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Active Positions Section -->
            <section class="active-positions-section">
                <div class="container">
                    <div class="section-header">
                        <h2>Active Positions</h2>
                        <p>Manage your current liquidity positions</p>
                    </div>

                    <!-- Positions will be loaded by JavaScript -->
                    <div id="positions-container">
                        <div class="positions-loading">
                            <div class="loading-spinner"></div>
                            <p>Loading your positions...</p>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Performance Charts Section -->
            <section class="performance-charts-section">
                <div class="container">
                    <div class="section-header">
                        <h2>Performance Analytics</h2>
                        <p>Track your liquidity performance over time</p>
                    </div>

                    <div class="charts-grid">
                        <!-- Portfolio Value Chart -->
                        <div class="chart-container">
                            <div class="chart-header">
                                <h3>Portfolio Value Over Time</h3>
                                <div class="chart-controls">
                                    <button class="chart-period active" data-period="7d">7D</button>
                                    <button class="chart-period" data-period="30d">30D</button>
                                    <button class="chart-period" data-period="90d">90D</button>
                                    <button class="chart-period" data-period="1y">1Y</button>
                                </div>
                            </div>
                            <div id="portfolio-value-chart" class="chart-content"></div>
                        </div>

                        <!-- Fees Earned Chart -->
                        <div class="chart-container">
                            <div class="chart-header">
                                <h3>Cumulative Fees Earned</h3>
                                <div class="chart-controls">
                                    <button class="chart-period active" data-period="7d">7D</button>
                                    <button class="chart-period" data-period="30d">30D</button>
                                    <button class="chart-period" data-period="90d">90D</button>
                                    <button class="chart-period" data-period="1y">1Y</button>
                                </div>
                            </div>
                            <div id="fees-earned-chart" class="chart-content"></div>
                        </div>

                        <!-- P&L Distribution -->
                        <div class="chart-container">
                            <div class="chart-header">
                                <h3>P&L by Position</h3>
                            </div>
                            <div id="pnl-distribution-chart" class="chart-content"></div>
                        </div>

                        <!-- APY Trends -->
                        <div class="chart-container">
                            <div class="chart-header">
                                <h3>APY Trends</h3>
                            </div>
                            <div id="apy-trends-chart" class="chart-content"></div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Transaction History Section -->
            <section class="transaction-history-section">
                <div class="container">
                    <div class="section-header">
                        <h2>Transaction History</h2>
                        <p>View all your liquidity-related transactions</p>
                    </div>

                    <div class="transaction-filters">
                        <div class="filter-group">
                            <label for="tx-type-filter">Transaction Type</label>
                            <select id="tx-type-filter">
                                <option value="">All Types</option>
                                <option value="add">Add Liquidity</option>
                                <option value="remove">Remove Liquidity</option>
                                <option value="claim">Claim Fees</option>
                                <option value="swap">Swap</option>
                            </select>
                        </div>
                        <div class="filter-group">
                            <label for="tx-pool-filter">Pool</label>
                            <select id="tx-pool-filter">
                                <option value="">All Pools</option>
                                <!-- Options populated by JavaScript -->
                            </select>
                        </div>
                        <div class="filter-group">
                            <label for="tx-date-filter">Date Range</label>
                            <select id="tx-date-filter">
                                <option value="7d">Last 7 days</option>
                                <option value="30d">Last 30 days</option>
                                <option value="90d">Last 90 days</option>
                                <option value="1y">Last year</option>
                                <option value="all">All time</option>
                            </select>
                        </div>
                    </div>

                    <!-- Transaction table will be populated by JavaScript -->
                    <div id="transactions-container">
                        <div class="transactions-loading">
                            <div class="loading-spinner"></div>
                            <p>Loading transaction history...</p>
                        </div>
                    </div>
                </div>
            </section>
        }

    </div>

    <!-- Footer -->
    @await Html.PartialAsync("_FooterPartial")

    <!-- Modals -->
    <!-- Position Details Modal -->
    <div id="position-details-modal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Position Details</h3>
                <button class="modal-close" onclick="closeModal('position-details-modal')">&times;</button>
            </div>
            <div class="modal-body" id="position-details-body">
                <!-- Position details will be loaded here -->
            </div>
        </div>
    </div>

    <!-- Remove Liquidity Modal -->
    <div id="remove-liquidity-modal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Remove Liquidity</h3>
                <button class="modal-close" onclick="closeModal('remove-liquidity-modal')">&times;</button>
            </div>
            <div class="modal-body">
                <div class="remove-liquidity-form">
                    <h4>How much liquidity do you want to remove?</h4>

                    <div class="removal-percentage">
                        <input type="range" id="removal-slider" min="0" max="100" value="0" step="1">
                        <div class="percentage-buttons">
                            <button class="percentage-btn" onclick="setRemovalPercentage(25)">25%</button>
                            <button class="percentage-btn" onclick="setRemovalPercentage(50)">50%</button>
                            <button class="percentage-btn" onclick="setRemovalPercentage(75)">75%</button>
                            <button class="percentage-btn" onclick="setRemovalPercentage(100)">100%</button>
                        </div>
                        <div class="removal-display">
                            <span id="removal-percentage">0</span>%
                        </div>
                    </div>

                    <div class="removal-preview">
                        <h5>You will receive:</h5>
                        <div class="receive-amounts">
                            <div class="receive-item">
                                <span id="receive-token1-amount">0.00</span>
                                <span id="receive-token1-symbol">TEACH</span>
                            </div>
                            <div class="receive-item">
                                <span id="receive-token2-amount">0.00</span>
                                <span id="receive-token2-symbol">ETH</span>
                            </div>
                        </div>
                        <div class="receive-total">
                            Total Value: $<span id="receive-total-value">0.00</span>
                        </div>
                    </div>

                    <div class="removal-actions">
                        <button class="btn-secondary" onclick="closeModal('remove-liquidity-modal')">Cancel</button>
                        <button class="btn-danger" onclick="proceedToRemoval()" id="proceed-removal-btn" disabled>
                            Proceed to DEX
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div id="loading-overlay" class="loading-overlay" style="display: none;">
        <div class="loading-spinner"></div>
        <p>Loading positions...</p>
    </div>

    <!-- Toast Container -->
    <div id="toast-container" class="toast-container position-fixed top-0 end-0 p-3"></div>

    <!-- Syncfusion Scripts -->
    <script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>

    <!-- Custom Scripts -->
    <script src="~/js/liquidity-dashboard.js" asp-append-version="true"></script>

    <!-- Initialize Management Dashboard -->
    <script data-json="manage-data" type="application/json">@Html.Raw(ViewBag.JsonData ?? "{}")</script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize management dashboard
            const walletAddress = '@ViewBag.WalletAddress';
            const errorMessage = '@ViewBag.ErrorMessage';

            if (errorMessage && window.liquidityDashboard) {
                window.liquidityDashboard.showErrorMessage(errorMessage);
            }

            if (walletAddress && window.liquidityDashboard) {
                // Load user positions and populate the interface
                window.liquidityDashboard.initManagement(walletAddress);
            }
        });

        // Management-specific functions
        function refreshPositions() {
            const walletAddress = '@ViewBag.WalletAddress';
            if (walletAddress && window.liquidityDashboard) {
                window.liquidityDashboard.loadUserPositions(walletAddress);
            }
        }

        function loadManualWallet() {
            const address = document.getElementById('manual-wallet-address').value;
            if (address && address.length === 42 && address.startsWith('0x')) {
                window.location.href = `/liquidity/manage?walletAddress=${address}`;
            } else {
                alert('Please enter a valid Ethereum address');
            }
        }

        function viewPosition(positionId) {
            if (window.liquidityDashboard) {
                window.liquidityDashboard.showPositionDetails(positionId);
            }
        }

        function addToPosition(positionId) {
            window.location.href = `/liquidity/add?positionId=${positionId}`;
        }

        function removePosition(positionId) {
            if (window.liquidityDashboard) {
                window.liquidityDashboard.showRemovePositionModal(positionId);
            }
        }

        function claimFees(positionId) {
            if (window.liquidityDashboard) {
                window.liquidityDashboard.claimFees(positionId);
            }
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        function setRemovalPercentage(percentage) {
            document.getElementById('removal-slider').value = percentage;
            document.getElementById('removal-percentage').textContent = percentage;
            if (window.liquidityDashboard) {
                window.liquidityDashboard.updateRemovalPreview(percentage);
            }
        }

        function proceedToRemoval() {
            if (window.liquidityDashboard) {
                window.liquidityDashboard.proceedToRemoval();
            }
        }

        function loadPreviousPage() {
            if (window.liquidityDashboard) {
                window.liquidityDashboard.loadPreviousTransactionPage();
            }
        }

        function loadNextPage() {
            if (window.liquidityDashboard) {
                window.liquidityDashboard.loadNextTransactionPage();
            }
        }
    </script>
</body>
</html>