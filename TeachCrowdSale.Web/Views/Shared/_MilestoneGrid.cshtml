@using TeachCrowdSale.Core.Data.Enum
@model TeachCrowdSale.Core.Models.RoadmapPageModel

<!-- Views/Roadmap/_MilestoneGrid.cshtml -->
<!-- Interactive milestone grid with filtering and card display -->

<section class="milestone-grid-section">
    <div class="container">
        <!-- Filter Controls -->
        <div class="milestone-filter-section">
            <div class="filter-header">
                <h2>Development Milestones</h2>
                <div class="milestone-summary">
                    <span class="summary-text">
                        Showing <span id="visible-count">@Model.ActiveMilestones.Count</span>
                        of <span id="total-count">@(Model.ActiveMilestones.Count + Model.UpcomingMilestones.Count)</span> milestones
                    </span>
                </div>
            </div>

            <div class="filter-controls">
                <div class="search-container">
                    <div class="search-input-wrapper">
                        <input type="text" id="milestone-search" placeholder="Search milestones..."
                               class="search-input" autocomplete="off">
                        <button class="search-button" id="search-btn" title="Search">
                            <span class="search-icon">🔍</span>
                        </button>
                        <button class="search-clear" id="search-clear" title="Clear search" style="display: none;">
                            <span class="clear-icon">✕</span>
                        </button>
                    </div>
                    <div class="search-suggestions" id="search-suggestions" style="display: none;">
                        <!-- Search suggestions will be populated here -->
                    </div>
                </div>

                <div class="filter-dropdowns">
                    <div class="filter-group">
                        <label for="status-filter" class="filter-label">Status</label>
                        <select id="status-filter" class="filter-select">
                            <option value="">All Statuses</option>
                            @foreach (var status in Model.FilterOptions.Statuses)
                            {
                                <option value="@status">@status</option>
                            }
                        </select>
                    </div>

                    <div class="filter-group">
                        <label for="category-filter" class="filter-label">Category</label>
                        <select id="category-filter" class="filter-select">
                            <option value="">All Categories</option>
                            @foreach (var category in Model.FilterOptions.Categories)
                            {
                                <option value="@category">@category</option>
                            }
                        </select>
                    </div>

                    <div class="filter-group">
                        <label for="priority-filter" class="filter-label">Priority</label>
                        <select id="priority-filter" class="filter-select">
                            <option value="">All Priorities</option>
                            @foreach (var priority in Model.FilterOptions.Priorities)
                            {
                                <option value="@priority">@priority</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="view-controls">
                    <div class="view-toggles">
                        <button class="view-toggle active" data-view="grid" title="Grid View">
                            <span class="toggle-icon">⊞</span>
                            <span class="toggle-text">Grid</span>
                        </button>
                        <button class="view-toggle" data-view="list" title="List View">
                            <span class="toggle-icon">☰</span>
                            <span class="toggle-text">List</span>
                        </button>
                        <button class="view-toggle" data-view="timeline" title="Timeline View">
                            <span class="toggle-icon">📊</span>
                            <span class="toggle-text">Timeline</span>
                        </button>
                    </div>

                    <div class="action-controls">
                        <button class="control-btn" id="export-milestones" title="Export Data">
                            <span class="control-icon">📤</span>
                            <span class="control-text">Export</span>
                        </button>
                        <button class="control-btn" id="refresh-milestones" title="Refresh Data">
                            <span class="control-icon">🔄</span>
                            <span class="control-text">Refresh</span>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Active Filters Display -->
            <div class="active-filters" id="active-filters" style="display: none;">
                <div class="filters-header">
                    <span class="filters-label">Active Filters:</span>
                    <button class="clear-all-filters" id="clear-all-filters">Clear All</button>
                </div>
                <div class="filters-list" id="filters-list">
                    <!-- Active filter tags will be populated here -->
                </div>
            </div>
        </div>

        <!-- Milestone Sections Toggle -->
        <div class="milestone-sections">
            <div class="section-tabs">
                <button class="section-tab active" data-section="active">
                    <span class="tab-text">Active</span>
                    <span class="tab-count">@Model.ActiveMilestones.Count</span>
                </button>
                <button class="section-tab" data-section="upcoming">
                    <span class="tab-text">Upcoming</span>
                    <span class="tab-count">@Model.UpcomingMilestones.Count</span>
                </button>
                <button class="section-tab" data-section="completed">
                    <span class="tab-text">Completed</span>
                    <span class="tab-count">@Model.CompletedMilestones.Count</span>
                </button>
                <button class="section-tab" data-section="all">
                    <span class="tab-text">All</span>
                    <span class="tab-count">@(Model.ActiveMilestones.Count + Model.UpcomingMilestones.Count + Model.CompletedMilestones.Count)</span>
                </button>
            </div>
        </div>

        <!-- Active Milestones Grid -->
        <div class="milestones-container" id="active-milestones-container">
            <div class="section-header">
                <h3>Active Milestones</h3>
                <span class="section-description">Currently in development</span>
            </div>

            <div class="milestones-grid" id="active-milestones-grid">
                @foreach (var milestone in Model.ActiveMilestones)
                {
                    @Html.Partial("_MilestoneCard", milestone)
                }
            </div>
        </div>

        <!-- Upcoming Milestones Grid -->
        <div class="milestones-container" id="upcoming-milestones-container" style="display: none;">
            <div class="section-header">
                <h3>Upcoming Milestones</h3>
                <span class="section-description">Planned for future development</span>
            </div>

            <div class="milestones-grid" id="upcoming-milestones-grid">
                @foreach (var milestone in Model.UpcomingMilestones)
                {
                    @Html.Partial("_MilestoneCard", milestone)
                }
            </div>
        </div>

        <!-- Completed Milestones Grid -->
        <div class="milestones-container" id="completed-milestones-container" style="display: none;">
            <div class="section-header">
                <h3>Completed Milestones</h3>
                <span class="section-description">Successfully delivered features</span>
            </div>

            <div class="milestones-grid" id="completed-milestones-grid">
                @foreach (var milestone in Model.CompletedMilestones)
                {
                    @Html.Partial("_MilestoneCard", milestone)
                }
            </div>
        </div>

        <!-- Loading State -->
        <div class="loading-state" id="milestones-loading" style="display: none;">
            <div class="loading-content">
                <div class="loading-spinner">
                    <div class="spinner-ring"></div>
                    <div class="spinner-ring"></div>
                    <div class="spinner-ring"></div>
                </div>
                <h3 class="loading-title">Loading Milestones</h3>
                <p class="loading-description">Fetching the latest development progress...</p>
            </div>
        </div>

        <!-- Empty State -->
        <div class="empty-state" id="milestones-empty" style="display: none;">
            <div class="empty-content">
                <div class="empty-icon">🔍</div>
                <h3 class="empty-title">No Milestones Found</h3>
                <p class="empty-description">
                    Try adjusting your search criteria or filters to find what you're looking for.
                </p>
                <div class="empty-actions">
                    <button class="btn-secondary" id="reset-filters">Reset Filters</button>
                    <button class="btn-primary" id="view-all-milestones">View All Milestones</button>
                </div>
            </div>
        </div>

        <!-- Error State -->
        <div class="error-state" id="milestones-error" style="display: none;">
            <div class="error-content">
                <div class="error-icon">⚠️</div>
                <h3 class="error-title">Unable to Load Milestones</h3>
                <p class="error-description">
                    There was a problem loading the milestone data. Please try again.
                </p>
                <div class="error-actions">
                    <button class="btn-primary" id="retry-load-milestones">Try Again</button>
                    <button class="btn-secondary" id="view-cached-data">View Cached Data</button>
                </div>
            </div>
        </div>

        <!-- Milestone Statistics Summary -->
        <div class="milestone-stats-summary">
            <div class="stats-grid">
                <div class="stat-item">
                    <div class="stat-icon">🎯</div>
                    <div class="stat-details">
                        <div class="stat-value" id="completion-rate">
                            @(Model.CompletedMilestones.Count > 0 ?
                                ((decimal)Model.CompletedMilestones.Count / (Model.ActiveMilestones.Count + Model.CompletedMilestones.Count + Model.UpcomingMilestones.Count) * 100).ToString("F1") : "0")%
                        </div>
                        <div class="stat-label">Completion Rate</div>
                    </div>
                </div>

                <div class="stat-item">
                    <div class="stat-icon">⚡</div>
                    <div class="stat-details">
                        <div class="stat-value" id="avg-duration">
                            @(Model.CompletedMilestones.Any() ?
                                Math.Round(Model.CompletedMilestones.Average(m =>
                                m.ActualCompletionDate.HasValue && m.StartDate.HasValue ?
                                (m.ActualCompletionDate.Value - m.StartDate.Value).TotalDays : 0), 0) : 0) days
                        </div>
                        <div class="stat-label">Avg. Duration</div>
                    </div>
                </div>

                <div class="stat-item">
                    <div class="stat-icon">📊</div>
                    <div class="stat-details">
                        <div class="stat-value" id="progress-trend">
                            @(Model.ActiveMilestones.Any() ?
                                Model.ActiveMilestones.Average(m => m.ProgressPercentage).ToString("F1") : "0")%
                        </div>
                        <div class="stat-label">Avg. Progress</div>
                    </div>
                </div>

                <div class="stat-item">
                    <div class="stat-icon">🔥</div>
                    <div class="stat-details">
                        <div class="stat-value" id="active-count">
                            @Model.ActiveMilestones.Count(m => m.Status.Equals(MilestoneStatus.InProgress))
                        </div>
                        <div class="stat-label">Actively Developed</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Milestone Quick Actions Panel -->
<div class="quick-actions-panel" id="milestone-quick-actions" style="display: none;">
    <div class="panel-header">
        <h4>Quick Actions</h4>
        <button class="panel-close" id="close-quick-actions">×</button>
    </div>
    <div class="panel-content">
        <div class="action-group">
            <h5>Bulk Operations</h5>
            <button class="action-btn" id="export-selected">Export Selected</button>
            <button class="action-btn" id="track-selected">Track Selected</button>
            <button class="action-btn" id="compare-selected">Compare Progress</button>
        </div>
        <div class="action-group">
            <h5>View Options</h5>
            <button class="action-btn" id="compact-view">Compact View</button>
            <button class="action-btn" id="detailed-view">Detailed View</button>
            <button class="action-btn" id="kanban-view">Kanban Board</button>
        </div>
    </div>
</div>