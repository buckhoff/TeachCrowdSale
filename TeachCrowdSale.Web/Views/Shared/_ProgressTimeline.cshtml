@model TeachCrowdSale.Web.Models.RoadmapPageModel

<!-- Views/Roadmap/_ProgressTimeline.cshtml -->
<!-- Interactive timeline chart for milestone progress visualization -->

<section class="progress-timeline-section">
    <div class="container">
        <div class="timeline-header">
            <div class="header-content">
                <h3>Development Timeline</h3>
                <p>Interactive Gantt chart showing milestone schedules, dependencies, and progress</p>
            </div>

            <div class="timeline-controls">
                <div class="time-range-controls">
                    <button class="range-btn active" data-range="6m">6 Months</button>
                    <button class="range-btn" data-range="1y">1 Year</button>
                    <button class="range-btn" data-range="2y">2 Years</button>
                    <button class="range-btn" data-range="all">All Time</button>
                </div>

                <div class="view-controls">
                    <button class="view-btn active" data-view="gantt" title="Gantt Chart">
                        <span class="view-icon">📊</span>
                        <span class="view-text">Gantt</span>
                    </button>
                    <button class="view-btn" data-view="roadmap" title="Roadmap View">
                        <span class="view-icon">🗺️</span>
                        <span class="view-text">Roadmap</span>
                    </button>
                    <button class="view-btn" data-view="dependencies" title="Dependencies">
                        <span class="view-icon">🕸️</span>
                        <span class="view-text">Dependencies</span>
                    </button>
                </div>

                <div class="chart-actions">
                    <button class="chart-action" id="timeline-zoom-reset" title="Reset Zoom">
                        <span class="action-icon">🔍</span>
                        <span class="action-text">Reset Zoom</span>
                    </button>
                    <button class="chart-action" id="timeline-export" title="Export Chart">
                        <span class="action-icon">📤</span>
                        <span class="action-text">Export</span>
                    </button>
                    <button class="chart-action" id="timeline-fullscreen" title="Fullscreen">
                        <span class="action-icon">⛶</span>
                        <span class="action-text">Fullscreen</span>
                    </button>
                </div>
            </div>
        </div>

        <!-- Timeline Legend -->
        <div class="timeline-legend">
            <div class="legend-group">
                <span class="legend-title">Status:</span>
                <div class="legend-items">
                    <div class="legend-item">
                        <span class="legend-color completed"></span>
                        <span class="legend-text">Completed</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-color in-progress"></span>
                        <span class="legend-text">In Progress</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-color planned"></span>
                        <span class="legend-text">Planned</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-color on-hold"></span>
                        <span class="legend-text">On Hold</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-color overdue"></span>
                        <span class="legend-text">Overdue</span>
                    </div>
                </div>
            </div>

            <div class="legend-group">
                <span class="legend-title">Priority:</span>
                <div class="legend-items">
                    <div class="legend-item">
                        <span class="legend-priority critical">●</span>
                        <span class="legend-text">Critical</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-priority high">●</span>
                        <span class="legend-text">High</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-priority medium">●</span>
                        <span class="legend-text">Medium</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-priority low">●</span>
                        <span class="legend-text">Low</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Timeline Chart Container -->
        <div class="timeline-chart-container">
            <div class="chart-wrapper">
                <div id="timeline-chart" class="timeline-chart"></div>

                <!-- Chart Loading State -->
                <div class="chart-loading" id="timeline-loading">
                    <div class="loading-content">
                        <div class="loading-spinner"></div>
                        <h4>Loading Timeline</h4>
                        <p>Preparing milestone data...</p>
                    </div>
                </div>

                <!-- Chart Error State -->
                <div class="chart-error" id="timeline-error" style="display: none;">
                    <div class="error-content">
                        <div class="error-icon">⚠️</div>
                        <h4>Unable to Load Timeline</h4>
                        <p>There was a problem loading the timeline data.</p>
                        <button class="btn-primary" id="retry-timeline">Try Again</button>
                    </div>
                </div>
            </div>

            <!-- Timeline Sidebar with Milestone List -->
            <div class="timeline-sidebar">
                <div class="sidebar-header">
                    <h4>Milestones</h4>
                    <button class="sidebar-toggle" id="toggle-sidebar" title="Toggle sidebar">
                        <span class="toggle-icon">←</span>
                    </button>
                </div>

                <div class="sidebar-content">
                    <div class="milestone-filter">
                        <input type="text" class="filter-input" placeholder="Filter milestones..." id="timeline-filter">
                    </div>

                    <div class="milestone-list" id="timeline-milestones">
                        @foreach (var milestone in Model.ActiveMilestones.Concat(Model.UpcomingMilestones).OrderBy(m => m.EstimatedCompletionDate))
                        {
                            <div class="timeline-milestone-item @milestone.StatusClass"
                                 data-milestone-id="@milestone.Id"
                                 data-status="@milestone.Status"
                                 data-category="@milestone.Category">

                                <div class="milestone-item-header">
                                    <div class="milestone-item-status @milestone.StatusClass">
                                        <span class="status-dot"></span>
                                    </div>
                                    <div class="milestone-item-priority @milestone.PriorityClass">
                                        <span class="priority-indicator">●</span>
                                    </div>
                                    <h5 class="milestone-item-title" title="@milestone.Title">
                                        @TruncateText(milestone.Title, 30)
                                    </h5>
                                </div>

                                <div class="milestone-item-details">
                                    <div class="milestone-item-category">@milestone.Category</div>
                                    <div class="milestone-item-progress">
                                        <div class="progress-mini">
                                            <div class="progress-mini-fill @milestone.StatusClass"
                                                 style="width: @milestone.ProgressPercentage%"></div>
                                        </div>
                                        <span class="progress-text">@milestone.ProgressPercentage.ToString("F0")%</span>
                                    </div>
                                </div>

                                <div class="milestone-item-dates">
                                    @if (milestone.StartDate.HasValue)
                                    {
                                        <div class="date-item start">
                                            <span class="date-label">Start:</span>
                                            <span class="date-value">@milestone.StartDate.Value.ToString("MMM dd")</span>
                                        </div>
                                    }
                                    @if (milestone.EstimatedCompletionDate.HasValue)
                                    {
                                        <div class="date-item end @(milestone.IsOverdue ? "overdue" : "")">
                                            <span class="date-label">@(milestone.ActualCompletionDate.HasValue ? "Done:" : "Due:")</span>
                                            <span class="date-value">
                                                @((milestone.ActualCompletionDate ?? milestone.EstimatedCompletionDate).Value.ToString("MMM dd"))
                                            </span>
                                        </div>
                                    }
                                </div>

                                <div class="milestone-item-actions">
                                    <button class="item-action" data-action="focus" title="Focus on timeline">🎯</button>
                                    <button class="item-action" data-action="details" title="View details">👁️</button>
                                    @if (!string.IsNullOrEmpty(milestone.GitHubIssueUrl))
                                    {
                                        <a href="@milestone.GitHubIssueUrl" target="_blank" class="item-action" title="GitHub">🔗</a>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Timeline Statistics -->
        <div class="timeline-statistics">
            <div class="stats-header">
                <h4>Timeline Insights</h4>
                <button class="stats-refresh" id="refresh-timeline-stats" title="Refresh statistics">
                    <span class="refresh-icon">🔄</span>
                </button>
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-icon">📅</div>
                    <div class="stat-content">
                        <div class="stat-value">
                            @(Model.ActiveMilestones.Concat(Model.UpcomingMilestones)
                                .Where(m => m.EstimatedCompletionDate.HasValue)
                                .Select(m => m.EstimatedCompletionDate.Value)
                                .DefaultIfEmpty()
                                .Max().ToString("MMM yyyy"))
                        </div>
                        <div class="stat-label">Project Completion</div>
                    </div>
                </div>

                <div class="stat-card">
                    <div class="stat-icon">⏱️</div>
                    <div class="stat-content">
                        <div class="stat-value">
                            @(Model.CompletedMilestones.Any() ?
                                Math.Round(Model.CompletedMilestones
                                .Where(m => m.ActualCompletionDate.HasValue && m.StartDate.HasValue)
                                .Average(m => (m.ActualCompletionDate.Value - m.StartDate.Value).TotalDays), 0) : 0) days
                        </div>
                        <div class="stat-label">Avg. Milestone Duration</div>
                    </div>
                </div>

                <div class="stat-card">
                    <div class="stat-icon">🎯</div>
                    <div class="stat-content">
                        <div class="stat-value">
                            @(Model.ActiveMilestones.Count(m => !m.IsOverdue)) / @Model.ActiveMilestones.Count
                        </div>
                        <div class="stat-label">On Track</div>
                    </div>
                </div>

                <div class="stat-card">
                    <div class="stat-icon">🔥</div>
                    <div class="stat-content">
                        <div class="stat-value">
                            @(Model.CompletedMilestones.Count(m =>
                                m.ActualCompletionDate >= DateTime.UtcNow.AddDays(-30)))
                        </div>
                        <div class="stat-label">Completed This Month</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Critical Path Analysis -->
        <div class="critical-path-section">
            <div class="critical-path-header">
                <h4>Critical Path Analysis</h4>
                <div class="path-controls">
                    <button class="path-btn active" data-path="critical">Critical Path</button>
                    <button class="path-btn" data-path="dependencies">Dependencies</button>
                    <button class="path-btn" data-path="blockers">Blockers</button>
                </div>
            </div>

            <div class="critical-path-content">
                <div class="path-visualization" id="critical-path-viz">
                    <!-- Critical path will be rendered here -->
                </div>

                <div class="path-details">
                    <div class="path-summary">
                        <div class="summary-item">
                            <span class="summary-icon">🛤️</span>
                            <span class="summary-text">
                                Critical path spans
                                <strong>@(CalculateCriticalPathDuration(Model.ActiveMilestones.Concat(Model.UpcomingMilestones).ToList())) days</strong>
                            </span>
                        </div>

                        <div class="summary-item">
                            <span class="summary-icon">⚠️</span>
                            <span class="summary-text">
                                <strong>@Model.ActiveMilestones.Count(m => m.IsBlocked)</strong>
                                blocking issues identified
                            </span>
                        </div>

                        <div class="summary-item">
                            <span class="summary-icon">🔗</span>
                            <span class="summary-text">
                                <strong>@Model.ActiveMilestones.Sum(m => m.Dependencies.Count)</strong>
                                active dependencies
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Timeline Quick Actions -->
        <div class="timeline-quick-actions">
            <button class="quick-action-btn" id="highlight-overdue">
                <span class="action-icon">⚠️</span>
                <span class="action-text">Highlight Overdue</span>
            </button>
            <button class="quick-action-btn" id="show-dependencies">
                <span class="action-icon">🔗</span>
                <span class="action-text">Show Dependencies</span>
            </button>
            <button class="quick-action-btn" id="focus-active">
                <span class="action-icon">🎯</span>
                <span class="action-text">Focus Active</span>
            </button>
            <button class="quick-action-btn" id="export-timeline">
                <span class="action-icon">📊</span>
                <span class="action-text">Export Timeline</span>
            </button>
        </div>
    </div>
</section>

@functions {
    string TruncateText(string text, int maxLength)
    {
        if (string.IsNullOrWhiteSpace(text) || text.Length <= maxLength)
            return text;

        return text.Substring(0, maxLength - 3) + "...";
    }

    int CalculateCriticalPathDuration(List<TeachCrowdSale.Core.Models.MilestoneDisplayModel> milestones)
    {
        // Simple critical path calculation based on longest sequence
        if (!milestones.Any() || !milestones.Any(m => m.StartDate.HasValue && m.EstimatedCompletionDate.HasValue))
            return 0;

        var earliestStart = milestones.Where(m => m.StartDate.HasValue).Min(m => m.StartDate.Value);
        var latestEnd = milestones.Where(m => m.EstimatedCompletionDate.HasValue).Max(m => m.EstimatedCompletionDate.Value);

        return (int)(latestEnd - earliestStart).TotalDays;
    }
}